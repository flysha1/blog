const e=JSON.parse('{"key":"v-90520bb4","path":"/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E7%AE%97%E6%B3%95/10.html","title":"10. 路径总和","lang":"zh-CN","frontmatter":{"date":"2018-02-01T00:00:00.000Z","category":["前端技术","面经"],"tag":["算法","递归","DFS"]},"headers":[],"git":{"createdTime":1709624313000,"updatedTime":1709624313000,"contributors":[{"name":"flysha1","email":"2903229312@qq.com","commits":1}]},"readingTime":{"minutes":1.29,"words":386},"filePathRelative":"前端技术/面试相关/算法/10.md","localizedDate":"2018年2月1日","excerpt":"<h1>10. 路径总和</h1>\\n<p><a href=\\"https://leetcode.cn/problems/permutations/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><strong>题目</strong>：给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。</a></p>\\n<p><em><strong>叶子节点</strong></em> 是指没有子节点的节点。</p>"}');export{e as data};
