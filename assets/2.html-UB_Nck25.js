const e=JSON.parse('{"key":"v-203130fb","path":"/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/vue/2.html","title":"2. Proxy相关","lang":"zh-CN","frontmatter":{"date":"2018-02-01T00:00:00.000Z","category":["前端技术","面经"],"tag":["vue"]},"headers":[{"level":2,"title":"1. Proxy能够监听到对象中的对象的引用吗？","slug":"_1-proxy能够监听到对象中的对象的引用吗","link":"#_1-proxy能够监听到对象中的对象的引用吗","children":[]},{"level":2,"title":"2. 如何让proxy去监听基本数据类型","slug":"_2-如何让proxy去监听基本数据类型","link":"#_2-如何让proxy去监听基本数据类型","children":[]}],"git":{"createdTime":1709624313000,"updatedTime":1709624313000,"contributors":[{"name":"flysha1","email":"2903229312@qq.com","commits":1}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"前端技术/面试相关/vue/2.md","localizedDate":"2018年2月1日","excerpt":"<h1>2. Proxy相关</h1>\\n<h2>1. Proxy能够监听到对象中的对象的引用吗？</h2>\\n<p>Proxy默认只代理一层对象的属性</p>\\n<p>想代理多层的解决办法是：在返回的时候，判断是否是一个对象，如果是对象的话，再次用Proxy代理，返回代理对象</p>\\n<h2>2. 如何让proxy去监听基本数据类型</h2>\\n<p>Proxy无法直接监听基本数据类型（如字符串、数字、布尔值等），因为它们是不可变的。Proxy只能在对象级别上进行操作，而不是基本数据类型。</p>\\n<p>当我们尝试使用Proxy包装基本数据类型时，会得到一个TypeError错误，因为基本数据类型不具有属性和方法：</p>"}');export{e as data};
