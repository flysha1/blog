import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as e,a as n,e as o,d as c,b as l}from"./app-U6uxE2hr.js";const u={},i=n("h1",{id:"_9-最大子数组和",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_9-最大子数组和"},[n("span",null,"9. 最大子数组和")])],-1),r={href:"https://leetcode.cn/problems/permutations/description/",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"题目",-1),d=l(`<p><em><strong>子数组</strong></em> 是数组中的一个连续部分。</p><ul><li>示例 1：</li></ul><p>输入：nums = [-2,1,-3,4,-1,2,1,-5,4]</p><p>输出：6</p><p>解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。</p><ul><li>示例 2：</li></ul><p>输入：nums = [1]</p><p>输出：1</p><ul><li>示例 3：</li></ul><p>输入：nums = [5,4,-1,7,8]</p><p>输出：23</p><p>方法一：动态规划</p><ul><li>时间复杂度：O(n)，其中 n 为 nums 数组的长度。我们只需要遍历一遍数组即可求得答案。</li><li>空间复杂度：O(1)。我们只需要常数空间存放若干变量。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxSubArray</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> maxAns <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        pre <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>pre <span class="token operator">+</span> x<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        maxAns <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxAns<span class="token punctuation">,</span> pre<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> maxAns<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function m(v,_){const s=t("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[n("a",r,[k,o("：给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。"),c(s)])]),d])}const x=a(u,[["render",m],["__file","9.html.vue"]]);export{x as default};
